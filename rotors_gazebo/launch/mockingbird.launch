<launch>
    <arg name="mav_name" default="mockingbird"/>
    <arg name="world_name" default="basic"/>
    <arg name="enable_logging" default="false"/>
    <arg name="enable_ground_truth" default="false"/>
    <arg name="log_file" default="$(arg mav_name)"/>
    <arg name="paused" default="true"/>
    <!-- needed for robotdescription  -->
    <arg name="namespace" default="$(arg mav_name)"/>
    <arg name="model" default="$(find rotors_description)/urdf/$(arg mav_name)_base.xacro"/>
    <arg name="wait_to_record_bag" default="false"/>
    <arg name="enable_mavlink_interface" default="true"/>
    <!-- send the robot XML to param server without namespace for controller interface, else the JointPositionController can't find the urdf -->
    <param
        name="robot_description"
        command="
      $(find xacro)/xacro.py '$(arg model)'
      enable_logging:=$(arg enable_logging)
      enable_ground_truth:=$(arg enable_ground_truth)
      enable_mavlink_interface:=$(arg enable_mavlink_interface)
      log_file:=$(arg log_file)
      wait_to_record_bag:=$(arg wait_to_record_bag)
      mav_name:=$(arg mav_name)
      namespace:=$(arg namespace)"/>

    <!-- Open Gazebo -->
    <env name="GAZEBO_MODEL_PATH" value="$(find rotors_gazebo)/models"/>
    <include file="$(find gazebo_ros)/launch/empty_world.launch">
        <arg name="world_name" value="$(find rotors_gazebo)/worlds/$(arg world_name).world"/>
        <!-- <arg name="debug" value="true"/> -->
        <arg name="paused" value="$(arg paused)"/>
        <!-- <arg name="gui" value="false"/> -->
    </include>

    <group ns="$(arg mav_name)">
        <!-- Spawn model -->
        <include file="$(find rotors_gazebo)/launch/spawn_mav.launch">
            <arg name="mav_name" value="$(arg mav_name)"/>
            <arg name="model" value="$(find rotors_description)/urdf/mav_generic_odometry_sensor.gazebo"/>
            <arg name="enable_logging" value="$(arg enable_logging)"/>
            <arg name="enable_ground_truth" value="$(arg enable_ground_truth)"/>
            <arg name="log_file" value="$(arg log_file)"/>
        </include>

        <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher"></node>
        <!-- Load ROS Controller for controlling the tilting angles -->
        <rosparam file="$(find rotors_control)/config/servo_motor_control.yaml" command="load"/>
        <node
            name="controller_spawner"
            pkg="controller_manager"
            type="spawner"
            respawn="false"
            output="screen"
            ns="/mockingbird"
            args="joint_0_position_controller joint_1_position_controller joint_2_position_controller joint_3_position_controller joint_4_position_controller joint_5_position_controller joint_state_controller"></node>

        <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher"/>
    </group>
</launch>
